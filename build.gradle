plugins {
    id 'com.gradle.build-scan' version '2.4.2'
    id 'org.springframework.boot' version '2.1.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'idea'
    id 'java'
    id 'maven'
}

apply plugin: 'io.spring.dependency-management'

group = 'eu.flate.glc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'


configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    //implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.hamcrest:hamcrest-core'
    implementation 'com.lukaspradel:steam-web-api:1.2'
    implementation 'javax.servlet:jstl'
    implementation 'javax.servlet:javax.servlet-api'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'io.jsonwebtoken:jjwt:0.9.0'


    compileOnly 'org.projectlombok:lombok'
    compileOnly 'org.springframework.boot:spring-boot-starter-tomcat'
    compileOnly 'org.apache.tomcat.embed:tomcat-embed-jasper'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.mockito:mockito-core'
}


sourceSets {
    main {
        resources {
            srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

processResources {
    dependsOn "createPom"
}

task createPom {
    pom {
        //noinspection GroovyAssignabilityCheck
        project {
            groupId rootProject.group.toString()
            artifactId rootProject.name
            version rootProject.version.toString()

            inceptionYear '2019'
        }
    }.writeTo("pom.xml")
}

