plugins {
    id 'com.gradle.build-scan' version '2.4.2'
    id 'org.springframework.boot' version '2.1.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'idea'
    id 'java'
    id 'maven'
}

apply plugin: 'io.spring.dependency-management'

group = 'eu.flate.glc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

def webappDir = "$projectDir/src/main/webapp"
def webappOut = "$webappDir/dist"
def webappSrc = "$webappDir/src"
def webappModules = "$webappDir/node_modules"
def webappFiles = files(file("$webappDir/angular.json"),
        file("$webappDir/package.json"),
        file("$webappDir/yarn.lock"),
        file("$webappDir/tsconfig.app.json"),
        file("$webappDir/tsconfig.json"),
        file("$webappDir/tsconfig.spec.json"));

def webappTestFile = file("$webappDir/karma.conf.js")

repositories {
    mavenCentral()
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.hamcrest:hamcrest-core'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.lukaspradel:steam-web-api:1.2'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
}


sourceSets {
    main {
        resources {
            srcDirs = ["$webappOut", "$projectDir/src/main/resources"]
        }
    }
}

processResources {
    dependsOn "nodeModules"
    dependsOn "createPom"
}

build {
    dependsOn "angular"

    task angular(type: Exec) {
        // installAngular should be run prior to this task
        dependsOn "nodeModules"
        workingDir "$webappDir"
        inputs.dir "$webappSrc"
        inputs.files "$webappFiles"
        outputs.dir "$webappOut"
        // Add task to the standard build group
        group = BasePlugin.BUILD_GROUP

        // We use the one from the path
        commandLine "$webappModules/@angular/cli/bin/ng", "build"
    }

    task cleanAngular(type: Delete) {
        delete "src/main/webapp/dist/static"
    }

    task nodeModules(type: Exec) {
        workingDir "$webappDir"
        inputs.files "$webappFiles"
        outputs.dir "$webappModules"
        group = BasePlugin.BUILD_GROUP

        commandLine "yarn", "install"
    }
}


task createPom {
    pom {
        //noinspection GroovyAssignabilityCheck
        project {
            groupId rootProject.group.toString()
            artifactId rootProject.name
            version rootProject.version.toString()

            inceptionYear '2019'
        }
    }.writeTo("pom.xml")
}

